@model ClinicManagementSystem.Models.VMAppointment

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<script>

    $(document).ready(function () {
        $("#OpenModal").click(function () {
            $("#AppointmentModal").show();
        });

        $("[data-bs-dismiss='modal']").click(function () {
            $("#AppointmentModal").hide();
        });
        Loaddata(0);

        $("#PId").change(function () {

            $.ajax({

                "url": "/AppointmentApi/Loadcasid?id=" + $("#PId").val(),
                "method": "get",
                success: function (Data) {
                    $("#Cid").val("");
                    if (Data.Code == 0) {
                        var obj = Data.Message;
                        $("#Cid").val(obj.Id);
                    }


                },
                error: function (error) {

                    console.log(error);

                }


            });

            $("#save").click(function () {

                //validation....

                // save to db

                var obj = {
                    "Id": $("#Id").val(),
                    "DrId": $("#DrId").val(),
                    "Date": $("#Date").val(),
                    "Cid": $("#Cid").val(),
                    "Stastus": $("#Stastus").val(),

                };
                //  console.log(JSON.stringify(obj));
                $.ajax({
                    "url": "/AppointmentApi/Save",
                    "method": "post",
                    "contentType": "application/json",
                    "data": JSON.stringify(obj),

                    success: function (data) {

                        alert(data.Message);
                        Loaddata(0);


                        $("#AppointmentModal").hide();

                    },
                    error: function (err) { console.log(err); }
                });


            });




        })




    });

    function Loaddata(pagno) {

        $.ajax({

            "url": "/AppointmentApi/GetAllC?pagno=" + pagno,
            "method": "get",
            success: function (Data) {


                // console.log(Data);
                $("#Appoyment").empty();
                $.each(Data.Message, function (index, item) {
                    var myDate = new Date(item.Date.match(/\d+/)[0] * 1);
                    previous = Data.pageno - 1;
                    Next = Data.pageno + 1;
                    if (previous == -1) {
                        previous = 0;
                    }
                    console.log(Data.Message);
                    var next = Data.pageno + 1;
                    $("#Appoyment").append("<tr><td><div class='btn - group - sm' role='group' aria-label='Basic example'><button type='button' class='btn btn - sm btn - outline - warning'><i class='bx bxs-edit m-0'></i>Select</button> <button type='button'onclick='Edit(" + item.Id + ")'class='btn btn - sm btn - outline - primary'><i class='fa-solid fa-pen-to-square'></i></button><button type='button'onclick='Delete(" + item.Id + ")' class='btn btn - sm btn - outline - danger'><i class='fa-solid fa-trash'></i></button></div></td><td>" + item.Id + "</td><td>" + item.Cid + "</td><td>" + myDate.toLocaleDateString() + "</td><td>" + item.Stastus + "</td></tr>")




                })
            },
            error: function (error) {

                console.log(error);

            }


        });


    }

    function Edit(id) {
        $.ajax({
            "url": "/AppointmentApi/FindByid?id=" + id,
            "method": "get",
            success: function (rep) {
                console.log(rep);
                if (rep.Code == 0) {

                    var obj = rep.Message;
                    var myDate = new Date(obj.Date.match(/\d+/)[0] * 1);
                    $("#Id").val(obj.Id);
                    $("#Cid").val(obj.Cid);
                    $("#Date").val(myDate.toLocaleDateString());
                    $("#Stastus").val(obj.Stastus);
                    $("#DrId").val(obj.DrId);


                    $("#AppointmentModal").show();
                }
            },
            error: function (err) {
                console.log(err);
            }
        });


    }

    function Delete(id) {
        if (confirm("Are you sure?")) {

            $.ajax({
                "url": "/AppointmentApi/Delete?id=" + id,
                "method": "get",
                success: function (rep) {

                    if (rep.Code == 0) {
                        alert(rep.Message);
                        Loaddata(0);
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });

        }
    }

</script>

<div class="modal" id="AppointmentModal" tabindex="-1" style="background: #00000014;">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" style="width:70vw">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Appointment Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-12">
                                <div class="row">
                                    <div class="col-12">
                                        @Html.HiddenFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DrId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.DropDownListFor(model => model.DrId, (IEnumerable<SelectListItem>)ViewBag.Dr, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.DrId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Cid, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Cid, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Cid, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.PId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.DropDownListFor(model => model.PId, (IEnumerable<SelectListItem>)ViewBag.Patient, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.PId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Stastus, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Stastus, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Stastus, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            <div class="col-md-offset-2 col-md-12 text-end">
                                <input type="button" id="save" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success">Save changes</button>
                </div>*@
        </div>
    </div>
</div>

<div class="AppointmentPage px-4 py-3 border-top">
    <div class="row">
        <div class="col-9">
            <div class="input-group">
                <span class="input-group-text"><i class='bx bx-search fs-5'></i></span>
                <input type="text" class="form-control" placeholder="Search appointment by name and email....">
            </div>
        </div>
        <div class="col-3 d-flex justify-content-end">
            <button class="btn btn-sm d-flex align-items-center text-white" style="background: #00acb1;" id="OpenModal"><i class='bx bx-plus fs-5'></i> New Appointment</button>
        </div>
    </div>
    <hr />
    <div class="AllAppointmentData overflow-auto mt-2 bg-secondary p-3" style="max-height:90vh;">
        <table class="table table-bordered">
            <thead id="Appoymentlist">
                <tr>
                    <th>#</th>
                    <th>Id</th>
                    <th>CaspaperId</th>
                    <th>AppointmentDate</th>
                    <th>Status</th>


                </tr>
            </thead>
            <tbody id="Appoyment">
                @*<tr>
                        <td>
                            <div class="btn-group-sm" role="group" aria-label="Basic example">
                                <button type="button" class="btn btn-sm btn-outline-warning"><i class='bx bxs-edit m-0'></i>Select</button>
                                <button type="button" class="btn btn-sm btn-outline-primary"><i class='bx bxs-edit m-0'></i></button>
                                <button type="button" class="btn btn-sm btn-outline-danger"><i class='bx bx-trash'></i></button>
                            </div>
                        </td>
                        <td>Id</td>
                        <td>Patient Name</td>
                        <td>Height</td>
                        <td>Weight</td>

                    </tr>*@
            </tbody>
        </table>
    </div>
</div>

<div class="row">
    <div class="col-12 text-right">
        @{





            <a onclick="Loaddata(previous) " class="btn btn-danger">previous</a>
            int totaln = (int)TempData.Peek("count");
            for (int i = 0; i <= totaln / 8; i++)
            {
                int total = i + 1;
                <a onclick="Loaddata( @i)" class="btn btn-danger">@total</a>

            }
            <a onclick="Loaddata(Next)" class="btn btn-danger">Next</a>

        }


    </div>




</div>