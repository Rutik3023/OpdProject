@model ClinicManagementSystem.Models.VMAppointment

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<script>

    $(document).ready(function () {
        $("#OpenModal").click(function () {
            $("#AppointmentModal").show();
        });

        $("[data-bs-dismiss='modal']").click(function () {
            $("#AppointmentModal").hide();
        });
    });

    function Loaddata(pagno) {

        $.ajax({

            "url": "/StaffApi/GetAllC?pagno=" + pagno,
            "method": "get",
            success: function (Data) {


                // console.log(Data);
                $("#Staffload").empty();
                $.each(Data.Message, function (index, item) {
                    var myDate = new Date(item.CreatedOn.match(/\d+/)[0] * 1);
                    previous = Data.pageno - 1;
                    Next = Data.pageno + 1;
                    if (previous == -1) {
                        previous = 0;
                    }
                    console.log(Data.Message);
                    var next = Data.pageno + 1;
                    $("#Staffload").append("<tr><td><div class='btn-group-sm'role='group'aria-label='Basic example'><button type='button' class='btn btn -sm btn-outline-warning'><i class='bx bxs-show m-0'></i></button><button onclick='Edit(" + item.Id + ")' type='button' class='btn btn-sm btn-outline-primary'><i class='bx bxs-edit m-0'></i></button><button onclick='Delete(" + item.Id + ")' type='button' class='btn btn-sm btn-outline-danger'><i class='bx bx-trash'></i></button></div></td><td>" + item.Id + "</td><td>" + item.Role + "</td><td>" + item.Name + "</td><td>" + item.Email + "</td><td>" + item.Address + "</td><td>" + item.Mobile + "</td><td>" + item.Photo + "</td><td>" + item.UserName + "</td><td>" + item.Password + "</td><td>" + myDate.toLocaleDateString() + "</td></tr>");

                })
            },
            error: function (error) {

                console.log(error);

            }


        });


    }



</script>

<div class="modal" id="AppointmentModal" tabindex="-1" style="background: #00000014;">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" style="width:70vw">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Appointment Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-12">
                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DoctorId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.DoctorId, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DoctorId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CasepaperId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.CasepaperId, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CasepaperId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.PId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.PId, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.PId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                   
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            <div class="col-md-offset-2 col-md-12 text-end">
                                <input type="button" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success">Save changes</button>
                </div>*@
        </div>
    </div>
</div>

<div class="AppointmentPage px-4 py-3 border-top">
    <div class="row">
        <div class="col-9">
            <div class="input-group">
                <span class="input-group-text"><i class='bx bx-search fs-5'></i></span>
                <input type="text" class="form-control" placeholder="Search appointment by name and email....">
            </div>
        </div>
        <div class="col-3 d-flex justify-content-end">
            <button class="btn btn-sm d-flex align-items-center text-white" style="background: #00acb1;" id="OpenModal"><i class='bx bx-plus fs-5'></i> New Appointment</button>
        </div>
    </div>
    <hr />
    <div class="AllAppointmentData overflow-auto mt-2 bg-secondary p-3" style="max-height:90vh;">
        <table class="table table-bordered">
            <thead id="Appoymentlist">
                <tr>
                    <th>#</th>
                    <th>Id</th>
                    <th>Patient Name</th>
                    <th>AppointmentDate</th>
                    <th>Status</th>


                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <div class="btn-group-sm" role="group" aria-label="Basic example">
                            <button type="button" class="btn btn-sm btn-outline-warning"><i class='bx bxs-edit m-0'></i>Select</button>
                            <button type="button" class="btn btn-sm btn-outline-primary"><i class='bx bxs-edit m-0'></i></button>
                            <button type="button" class="btn btn-sm btn-outline-danger"><i class='bx bx-trash'></i></button>
                        </div>
                    </td>
                    <td>Id</td>
                    <td>Patient Name</td>
                    <td>Height</td>
                    <td>Weight</td>
                    
                </tr>
            </tbody>
        </table>
    </div>
</div>

