@model ClinicManagementSystem.Models.VMPatient

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<script>

    $(document).ready(function () {
        Loaddata(0);

        $("#OpenModal").click(function () {
            $("#PatientModal").show();
        });

        $("[data-bs-dismiss='modal']").click(function () {
            $("#PatientModal").hide();
        });

        $("#save").click(function () {

            //validation....
            //var gender = "";
            //if ($("#RodMale").prop("checked")) {
            //    gender = "M";

            //}
            //else {

            //    gender = "F";

            //}
            // save to db

            var obj = {
                "Id": $("#Id").val(),

                "Name": $("#Name").val(),
                "Address": $("#Address").val(),
                "MobileNo": $("#Mobile").val(),
                "Email": $("#Email").val(),
                "Gender": $("#Gender").val(),

                "AdhaarNo": $("#AdhaarNo").val(),
                "BloodGroupId": $("#BloodGroupId").val(),

                "Photo": $("#Photo").val()
            }
            //  console.log(JSON.stringify(obj));
            $.ajax({
                "url": "/PatientApi/Save",
                "method": "post",
                "contentType": "application/json",
                "data": JSON.stringify(obj),

                success: function (data) {

                    alert(data.Message);
                    Loaddata(0);
                    $("#PatientModal").hide();

                },
                error: function (err) { console.log(err); }
            });
        });
    });
    function Loaddata(pagno) {

        $.ajax({

            "url": "/PatientApi/GetAllC?pagno=" + pagno,
            "method": "get",
            success: function (Data) {


                //console.log(Data);
                $("#loadPatient").empty();
                $.each(Data.Message, function (index, item) {
                    var myDate = new Date(item.CreatedOn.match(/\d+/)[0] * 1);
                    previous = Data.pageno - 1;
                    Next = Data.pageno + 1;
                    if (previous == -1) {
                        previous = 0;
                    }
                   
                    console.log(Data.Message);
                    var next = Data.pageno + 1;
                    $("#loadPatient").append("<tr><td><div class='btn-group-sm'role='group'aria-label='Basic example'><button type='button'class='btn btn-sm btn-outline-warning'><i class='bx bxs-edit m-0'></i>Add Casepaper</button><button type='button'onclick='Edit(" + item.Id + ")' class='btn btn-sm btn- outline-primary'><i class='bx bxs-edit m-0'></i></button><button type='button'onclick='Delete(" + item.Id + ")'  class='btn btn-sm btn-outline-danger'><i class='bx bx-trash'></i></button></div></td><td>" + item.Id + "</td><td>" + item.Name + "</td><td>" + item.Email + "</td><td>" + item.MobileNo + "</td><td>" + item.Address + "</td><td>" + item.AdhaarNo + "</td><td>" + item.BloodGroupId + "</td><td>" + item.Gender + "</td><td>" + myDate.toLocaleDateString() + "</td></tr>");
                    /* $("#loadPatient").append("<tr><td> <div class='btn-group-sm' role='group' aria-label='Basic example'><button type='button' class='btn btn-sm btn-outline-warning'><i class='bx bxs-edit m-0'></i>Add Casepaper</button><button type='button' class='btn btn-sm btn-outline-primary'><i class='bx bxs-edit m-0'></i></button><button type='button' class='btn btn-sm btn-outline-danger'><i class='bx bx-trash'></i></button></div></td><td>Id</td><td>Patient Name</td><td>Email</td><td>Mobile No</td><td>Address</td><td>Adhaar No.</td><td>Blood Group</td> <td>Gender</td><td>Created On</td></tr>");*/
                })


            },
            error: function (error) {

                console.log(error);

            }


        });
    }
        function Delete(id) {
            if (confirm("Are you sure?")) {

                $.ajax({
                    "url": "/PatientApi/Delete?id=" + id,
                    "method": "get",
                    success: function (rep) {

                        if (rep.Code == 0) {
                            alert(rep.Message);
                            Loaddata(0);
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }


        }

        function Edit(id) {

            $.ajax({
                "url": "/PatientApi/FindByid?id=" + id,
                "method": "get",
                success: function (rep) {

                    if (rep.Code == 0) {

                        var obj = rep.Message;

                        console.log(obj);

                        $("#Id").val(obj.Id);
                        $("#AdhaarNo").val(obj.AdhaarNo);
                        $("#Name").val(obj.Name);
                        $("#Address").val(obj.Address);
                        $("#MobileNo").val(obj.MobileNo);
                        $("#Email").val(obj.Email);
                        ///*  $("#Gender").val(obj.Gender);*/
                        //if (obj.Gender == "M") {
                        //    $("#RdoMale").prop("checked", true);
                        //}
                        //else {

                        //    $("#RdoFemale").prop("checked", true);
                        //}
                        $("#BloodGroupId").val(obj.BloodGroupId);
                       
                        $("#Photo").val(obj.Photo);
                        $("#Gender").val(obj.Gender);
                       

                        $("#PatientModal").show();
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });

        }

    





</script>

<div class="modal" id="PatientModal" tabindex="-1" style="background: #00000014;">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" style="width:70vw">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Patient Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-12">
                                <div class="row">
                                    <div class="col-12">
                                        @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @rows = "4" })
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.RadioButtonFor(model => model.Gender, "M", new { @class = "form-radio", @id = "rdoMale" }) Male
                                                @Html.RadioButtonFor(model => model.Gender, "F", new { @class = "form-radio", @id = "rdoFemale" }) Female
                                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.AdhaarNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.AdhaarNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.AdhaarNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.BloodGroupId, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.DropDownListFor(model => model.BloodGroupId, (IEnumerable<SelectListItem>)ViewBag.blood, new { @class = "form-control" } )
                                                @Html.ValidationMessageFor(model => model.BloodGroupId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    @*<div class="col-6">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>*@
                                </div>
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            <div class="col-md-offset-2 col-md-12 text-end">
                                <input type="button" id="save" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success">Save changes</button>
                </div>*@
        </div>
    </div>
</div>

<div class="PatientPage px-4 py-3 border-top">
    <div class="row">
        <div class="col-10">
            <div class="input-group">
                <span class="input-group-text"><i class='bx bx-search fs-5'></i></span>
                <input type="text" class="form-control" placeholder="Search patient by ID, name and email....">
            </div>
        </div>
        <div class="col-2">
            <button class="btn btn-sm d-flex align-items-center text-white" style="background: #00acb1;" id="OpenModal"><i class='bx bx-plus fs-5'></i> Add New Patient</button>
        </div>
    </div>
    <hr />
    <div class="AllPatientData overflow-auto mt-2 bg-secondary p-3" style="max-height:90vh;">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Id</th>
                    <th>Patient Name</th>
                    <th>Email</th>
                    <th>Mobile No</th>
                    <th>Address</th>
                    <th>Adhaar No.</th>
                    <th>Blood Group</th>
                    <th>Gender</th>
                    <th>Created On</th>
                </tr>
            </thead>
            <tbody id="loadPatient">
                @*<tr>
                    <td>
                        <div class="btn-group-sm" role="group" aria-label="Basic example">
                            <button type="button" class="btn btn-sm btn-outline-warning"><i class='bx bxs-edit m-0'></i>Add Casepaper</button>
                            <button type="button" class="btn btn-sm btn-outline-primary"><i class='bx bxs-edit m-0'></i></button>
                            <button type="button" class="btn btn-sm btn-outline-danger"><i class='bx bx-trash'></i></button>
                        </div>
                    </td>
                    <td>Id</td>
                    <td>Patient Name</td>
                    <td>Email</td>
                    <td>Mobile No</td>
                    <td>Address</td>
                    <td>Adhaar No.</td>
                    <td>Blood Group</td>
                    <td>Gender</td>
                    <td>Created On</td>
                </tr>*@
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="col-12 text-right">
        @{





            <a onclick="Loaddata(previous) " class="btn btn-danger">previous</a>
            int totaln = (int)TempData.Peek("count");
            for (int i = 0; i <= totaln / 8; i++)
            {
                int total = i + 1;
                <a onclick="Loaddata( @i)" class="btn btn-danger">@total</a>

            }
            <a onclick="Loaddata(Next)" class="btn btn-danger">Next</a>

        }


    </div>




</div>