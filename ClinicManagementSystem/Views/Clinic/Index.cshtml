@model ClinicManagementSystem.Models.VMClinic

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<style>
    /*.AllClinicData i{
        font-size: 20px
    }*/
</style>

<script>
    var previous;
    var Next;
    var countn;
    
    $(document).ready(function () {

        Loaddata(0);
       

        $("#OpenModal").click(function () {
            $("#ClinicModal").show();
        });

        $("[data-bs-dismiss='modal']").click(function () {
            $("#ClinicModal").hide();
        });



        $("#Save").click(function () {

            //validation....



            // save to db

            var obj = {
                "Id": $("#Id").val(),
                "Name": $("#Name").val(),
                "Email": $("#Email").val(),
                "Address": $("#Address").val(),
                "Photo": $("#Photo").val(),
                "RegNo": $("#RegNo").val(),

                "CloseTime": $("#CloseTime").val(),
                "OpenTime": $("#OpenTime").val(),
            };
           // console.log(JSON.stringify(obj));
            $.ajax({
                "url": "/ClinicApi/Save",
                "method": "post",
                "contentType": "application/json",
                "data": JSON.stringify(obj),

                success: function (data) {

                    alert(data.Message);
                    Loaddata(0);
                    $("#ClinicModal").hide();

                },
                error: function (err) { console.log(err); }
            });


        });


        $("#txtSearch").keyup(function () {
            $.ajax(
                {
                    "url": "/ClinicApi/GetAll?key=" + $("#txtSearch").val(),
                    "method": "get",
                    success: function (data) {
                        // console.log(data);
                        if (data.Code == 0) {
                            $("#clinicload").empty();
                            $.each(data.Message, function (index, item) {
                                var myDate = new Date(item.Createdon.match(/\d+/)[0] * 1);
                                var open = new Date(item.OpenTime.match(/\d+/)[0] * 1);
                                var close = new Date(item.CloseTime.match(/\d+/)[0] * 1);
                                $("#clinicload").append(" <tr><td><div class='btn-group-sm d-flex role='group'aria-label='Basic example'><button type='button' class='btn btn-sm btn-outline-warning'><i class='bx bxs-show m-0'></i></button><button onclick='Edit(" + item.Id + ")'type='button' class='btn btn-sm btn-outline-primary'><i class='bx bxs-edit m-0'></i></button> <button onclick='Delete(" + item.Id + ")' type='button' class='btn btn-sm btn-outline-danger'><i class='bx bx-trash'></i></button></div> </td ><td>" + item.Id + "</td><td>" + item.RegNo + "</td><td>" + item.Name + "</td><td>" + item.Email + "</td><td>" + item.Address + "</td><td></td><td>" + open.toLocaleTimeString() + "</td><td>" + close.toLocaleTimeString() + "</td><td>" + item.Photo + "</td><td>" + myDate.toLocaleDateString() + "</td> </tr >")
                            });
                        }
                    },
                    error: function (message) {
                        console.log(message);
                    }
                }
            );
        });

    });

    function Delete(id) {
        if (confirm("Are you sure?")) {

            $.ajax({
                "url": "/ClinicApi/Delete?id=" + id,
                "method": "get",
                success: function (rep) {
                    console.log(rep);
                    if (rep.Code == 0) {
                        alert(rep.Message);
                        Loaddata(0);
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }


    }

    function Edit(id) {

        $.ajax({
            "url": "/ClinicApi/FindByid?id=" + id,
            "method": "get",
            success: function (rep) {

                if (rep.Code == 0) {

                    var obj = rep.Message;

                    $("#Id").val(obj.Id);
                    $("#Name").val(obj.Name);
                    $("#Email").val(obj.Email);
                    $("#Address").val(obj.Address);
                    $("#Photo").val(obj.Photo);
                    $("#RegNo").val(obj.RegNo);
                    $("#OpenTime").val(obj.OpenTime);

                    $("#ClinicModal").show();
                }
            },
            error: function (err) {
                console.log(err);
            }
        });
    }




    function Loaddata( pagno) {

        $.ajax({

            "url": "/ClinicApi/GetAllC?pagno="+ pagno,
            "method": "get",
            success: function (Data) {
                 console.log(Data);
                counts = Data.count;
                
                $("#clinicload").empty();
                $.each(Data.Message, function (index, item) {

                    var myDate = new Date(item.Createdon.match(/\d+/)[0] * 1);
                    var open = new Date(item.OpenTime.match(/\d+/)[0] * 1);
                    var close = new Date(item.CloseTime.match(/\d+/)[0] * 1);

                    previous = Data.pageno - 1;
                    Next = Data.pageno + 1;
                   
                    if (previous == -1) {
                        previous = 0;
                    }
                  
                    var next = Data.pageno + 1;
                    $("#clinicload").append(" <tr><td><div class='btn-group-sm d-flex' role='group' aria-label='Basic example'><button type='button' class='btn btn-sm btn-outline-warning'><i class='bx bxs-show m-0'></i></button><button onclick='Edit(" + item.Id + ")'type='button' class='btn btn-sm btn-outline-primary'><i class='bx bxs-edit m-0'></i></button> <button onclick='Delete(" + item.Id + ")' type='button' class='btn btn-sm btn-outline-danger'><i class='bx bx-trash'></i></button></div> </td ><td>" + item.Id + "</td><td>" + item.RegNo + "</td><td>" + item.Name + "</td><td>" + item.Email + "</td><td>" + item.Address + "</td><td></td><td>" + open.toLocaleTimeString() + "</td><td>" + close.toLocaleTimeString() + "</td><td>" + item.Photo + "</td><td>" + myDate.toLocaleDateString() + "</td> </tr >")

                });

            },
            error: function (error) {

                console.log(error);

            }


        });


    }
</script>




<div class="modal" id="ClinicModal" tabindex="-1" style="background: #00000014;">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" style="width:70vw">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Clinic Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col-12">
                                <div class="row">
                                    <div class="col-6">
                                        <div class="row">
                                            <div class="col-12">
                                                @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-12">
                                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                                    <div class="col-md-12">
                                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control mb-3", @rows = "3" })
                                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                <input type="file" name="Photo" value="" class="form-control" />
                                                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.RegNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.RegNo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.RegNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.OpenTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.OpenTime, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.OpenTime, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CloseTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.CloseTime, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CloseTime, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                   

                                </div>
                            </div>
                        </div>

                        <div class="form-group mt-3">
                            <div class="col-md-offset-2 col-md-12 text-end">
                                <input type="button" id="Save" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                }

            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-success">Save changes</button>
                </div>*@
        </div>
    </div>
</div>

<div class="ClinicPage px-4 py-3">
    <div class="row">
        <div class="col-10">
            <div class="input-group">
                <span class="input-group-text"><i class='bx bx-search fs-5'></i></span>
                <input type="text" class="form-control" id="txtSearch" placeholder="Search clinic by name and email....">
            </div>
        </div>
        <div class="col-2">
            <button class="btn btn-sm d-flex align-items-center text-white" style="background: #00acb1;" id="OpenModal"><i class='bx bx-plus fs-5'></i> Add New Clinic</button>
        </div>
    </div>
    <hr />
    <div class="AllClinicData overflow-auto mt-2 bg-secondary p-3" style="max-height:90vh;">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Id</th>
                    <th>Reg.No</th>
                    <th>Clinic Name</th>
                    <th>Email</th>
                    <th>Address</th>
                    <th>Phone No</th>
                    <th>Opening time</th>
                    <th>Closeing Time</th>
                    <th>Photo</th>

                    <th>CreatedOn</th>
                </tr>
            </thead>
            <tbody id="clinicload">
                @*<tr>
                        <td>
                            <div class="btn-group-sm" role="group" aria-label="Basic example">
                                <button type="button" class="btn btn-sm btn-outline-warning"><i class='bx bxs-show m-0'></i></button>
                                <button type="button" class="btn btn-sm btn-outline-primary"><i class='bx bxs-edit m-0'></i></button>
                                <button type="button" class="btn btn-sm btn-outline-danger"><i class='bx bx-trash'></i></button>
                            </div>
                        </td>
                        <td>Id</td>
                        <td>Reg. No.</td>
                        <td>Clinic Name</td>
                        <td>Email</td>
                        <td>Address</td>
                        <td>Phone No</td>
                        <td>Opening & Closeing Time</td>
                        <td>Photo</td>
                        <td>CreatedBy</td>
                        <td>CreatedOn</td>
                    </tr>*@
            </tbody>
        </table>

    </div>
    <div class="row">
        <div class="col-12 text-right">
            @{      
               





                <a onclick="Loaddata(previous) " class="btn btn-danger">previous</a>
                int totaln = (int)TempData.Peek("count");
                for (int i = 0; i <= totaln/ 8; i++)
                {
                    int total = i + 1;
                    <a onclick="Loaddata( @i)" class="btn btn-danger">@total</a>

                }
                <a onclick="Loaddata(Next)" class="btn btn-danger">Next</a>

            }


        </div>



    </div>
</div>